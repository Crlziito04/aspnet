// <auto-generated />
using AppStore.Models.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Appstore.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240917023409_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("AppStore.Models.Domain.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("AppStore.Models.Domain.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("AppStore.Models.Domain.LibroCategoria", b =>
                {
                    b.Property<int>("LibroId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("LibroId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("LibroCategorias");
                });

            modelBuilder.Entity("CategoriaLibro", b =>
                {
                    b.Property<int>("CategoriasListId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LibrosListaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoriasListId", "LibrosListaId");

                    b.HasIndex("LibrosListaId");

                    b.ToTable("CategoriaLibro");
                });

            modelBuilder.Entity("AppStore.Models.Domain.LibroCategoria", b =>
                {
                    b.HasOne("AppStore.Models.Domain.Categoria", "Categoria")
                        .WithMany("LibrosRelationList")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppStore.Models.Domain.Libro", "Libro")
                        .WithMany("CategoriasRelationList")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("CategoriaLibro", b =>
                {
                    b.HasOne("AppStore.Models.Domain.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategoriasListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppStore.Models.Domain.Libro", null)
                        .WithMany()
                        .HasForeignKey("LibrosListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppStore.Models.Domain.Categoria", b =>
                {
                    b.Navigation("LibrosRelationList");
                });

            modelBuilder.Entity("AppStore.Models.Domain.Libro", b =>
                {
                    b.Navigation("CategoriasRelationList");
                });
#pragma warning restore 612, 618
        }
    }
}
